/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package brokerapplication;

import java.io.File;
import java.io.FileOutputStream;
import java.math.BigInteger;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

/**
 *
 * @author Mayank Kakad
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    static AddCustomer ac;
    static CustomerList cl;
    static AddEntry ae;
    static BrokerHistory bh;
    static CustomerHistory ch;
    static BillFormat bf;
    static ItemsList il;
    public HomePage() {
        initComponents();
        String name=LoginPage.datop.getName(LoginPage.loggedInUser);
        jLabel2.setText("Hi, "+name+"!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        jDialog1.setTitle("Brokerage Bill");
        jDialog1.setSize(new java.awt.Dimension(400, 300));
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton9.setText("Sellerwise");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jButton9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton9KeyPressed(evt);
            }
        });
        jDialog1.getContentPane().add(jButton9, new java.awt.GridBagConstraints());

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton10.setText("Buyerwise");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jButton10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton10KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jDialog1.getContentPane().add(jButton10, gridBagConstraints);

        jDialog2.setTitle("Files Saved");
        jDialog2.setSize(new java.awt.Dimension(400, 300));
        jDialog2.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 40)); // NOI18N
        jLabel1.setText("Files Saved");
        jDialog2.getContentPane().add(jLabel1, new java.awt.GridBagConstraints());

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton12.setText("OK");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jButton12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton12KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jDialog2.getContentPane().add(jButton12, gridBagConstraints);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Home Page");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton1.setText("Add Entry");
        jButton1.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 30);
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton2.setText("Customer History");
        jButton2.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton3.setLabel("Add Customer");
        jButton3.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 30);
        getContentPane().add(jButton3, gridBagConstraints);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton4.setText("Broker History");
        jButton4.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        getContentPane().add(jButton4, gridBagConstraints);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton5.setText("Logout");
        jButton5.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(60, 0, 0, 0);
        getContentPane().add(jButton5, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setToolTipText("");
        jLabel2.setPreferredSize(new java.awt.Dimension(760, 75));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton6.setText("Bill Format");
        jButton6.setToolTipText("");
        jButton6.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        getContentPane().add(jButton6, gridBagConstraints);

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton7.setText("Customer List");
        jButton7.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton7KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 30);
        getContentPane().add(jButton7, gridBagConstraints);

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton8.setText("Brokerage Bill");
        jButton8.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jButton8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton8KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        getContentPane().add(jButton8, gridBagConstraints);

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton11.setText("Items List");
        jButton11.setPreferredSize(new java.awt.Dimension(350, 75));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jButton11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton11KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 0, 30);
        getContentPane().add(jButton11, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ch=new CustomerHistory();
        ch.setExtendedState(JFrame.MAXIMIZED_BOTH);
        ch.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        LoginPage.loggedIn=false;
        LoginPage.loggedInUser=null;
        //try{LoginPage.datop.conn.close();}catch(Exception e){}
        LoginPage.lp.refresh();
        try
        {
            File f=new File("session.txt");
            f.delete();
        }
        catch(Exception e){}
        LoginPage.lp.setExtendedState(JFrame.MAXIMIZED_BOTH);
        LoginPage.lp.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ac=new AddCustomer();
        ac.setExtendedState(JFrame.MAXIMIZED_BOTH);
        ac.initComps();
        ac.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton1.doClick();
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton3.doClick();
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton6.doClick();
    }//GEN-LAST:event_jButton6KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton2.doClick();
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton4.doClick();
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton7KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton7.doClick();
    }//GEN-LAST:event_jButton7KeyPressed

    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton5.doClick();
    }//GEN-LAST:event_jButton5KeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        cl=new CustomerList();
        cl.setExtendedState(JFrame.MAXIMIZED_BOTH);
        cl.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        bf=new BillFormat();
        bf.setExtendedState(JFrame.MAXIMIZED_BOTH);
        bf.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ae=new AddEntry();
        ae.setExtendedState(JFrame.MAXIMIZED_BOTH);
        ae.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        bh=new BrokerHistory();
        bh.setExtendedState(JFrame.MAXIMIZED_BOTH);
        bh.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int xco=(LoginPage.hp.getWidth()-jDialog1.getWidth())/2;
        int yco=(LoginPage.hp.getHeight()-jDialog1.getHeight())/2;
        jDialog1.setBounds(xco,yco,jDialog1.getWidth(),jDialog1.getHeight());
        jDialog1.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try
        {
            Vector<Seller> sellerlist=LoginPage.datop.getSellerList();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd_MM_yyyy HH_mm_ss");  
            LocalDateTime now = LocalDateTime.now();
            String datetime=dtf.format(now);
            File file=new File(LoginPage.loggedInUser+" Sellerwise Brokerage Bills");
            file.mkdir();
            Bill b=LoginPage.datop.getBillFormat();
            if(b==null)
            {
                JOptionPane.showMessageDialog(null,"Bill Format not yet set","Error: invalid input",JOptionPane.ERROR_MESSAGE);
                return;
            }
            String leftlines[]=b.left.split("\n");
            String rightlines[]=b.right.split("\n");
            for(int i=0;i<sellerlist.size();i++)
            {
                Vector<Transaction> temp;
                String filename=LoginPage.loggedInUser+" Sellerwise Brokerage Bills\\"+sellerlist.get(i).name+" "+datetime+".docx";
                XWPFDocument doc=new XWPFDocument();
                FileOutputStream fos=new FileOutputStream(new File(filename));
                XWPFParagraph para1=doc.createParagraph();
                para1.setAlignment(ParagraphAlignment.CENTER);
                for(int j=0;j<leftlines.length&&j<rightlines.length;j++)
                {
                    XWPFRun left=para1.createRun();
                    left.setFontFamily("Calibri");
                    left.setFontSize(14);
                    left.setText(leftlines[j]+"\t\t\t\t\t\t\t");
                    XWPFRun right=para1.createRun();
                    right.setFontFamily("Calibri");
                    right.setFontSize(14);
                    right.setText(rightlines[j]);
                    right.addBreak();
                }
                XWPFParagraph para2=doc.createParagraph();
                para2.setAlignment(ParagraphAlignment.CENTER);
                XWPFRun name=para2.createRun();
                name.setFontFamily("Calibri");
                name.setBold(true);
                name.setFontSize(18);
                name.setText(b.broker_name);
                name.addBreak();
                XWPFRun address=para2.createRun();
                address.setFontFamily("Calibri");
                address.setFontSize(14);
                address.setText(b.broker_address);
                address.addBreak();
                XWPFParagraph para3=doc.createParagraph();
                para3.setAlignment(ParagraphAlignment.CENTER);
                XWPFRun title=para3.createRun();
                title.setFontFamily("Calibri");
                title.setFontSize(16);
                title.setBold(true);
                title.setText(b.bill_title);
                title.addBreak();
                XWPFRun period=para3.createRun();
                period.setFontFamily("Calibri");
                period.setFontSize(14);
                period.setText(b.bill_period);
                period.addBreak();
                temp=LoginPage.datop.getSellerWiseTransactions(sellerlist.get(i).code,sellerlist.get(i).name);
                if(temp.size()==0)
                {
                    doc.write(fos);
                    fos.close();
                    File f=new File(filename);
                    f.delete();
                    continue;
                }
                XWPFParagraph sellerName=doc.createParagraph();
                sellerName.setAlignment(ParagraphAlignment.LEFT);
                XWPFRun myRun=sellerName.createRun();
                myRun.setFontFamily("Calibri");
                myRun.setFontSize(12);
                myRun.setBold(true);
                myRun.setText("SELLER:\t"+temp.get(0).seller_name);
                myRun.addBreak();
                XWPFRun mySecondRun=sellerName.createRun();
                mySecondRun.setFontFamily("Calibri");
                mySecondRun.setFontSize(12);
                mySecondRun.setBold(true);
                mySecondRun.setText(LoginPage.datop.getSellerPlace(temp.get(0).seller_code,temp.get(0).seller_name));
                XWPFTable table=doc.createTable();
                XWPFTableRow row1=table.getRow(0);
                row1.getCell(0).getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1500));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(5000));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1600));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1000));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1000));
                XWPFRun rowcell[]=new XWPFRun[5];
                for(int j=0;j<rowcell.length;j++)
                {
                    row1.getCell(j).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    row1.getCell(j).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    rowcell[j]=row1.getCell(j).getParagraphs().get(0).createRun();
                    rowcell[j].setBold(true);
                    rowcell[j].setFontFamily("Calibri");
                    rowcell[j].setFontSize(12);
                }
                rowcell[0].setText("DATE");
                rowcell[1].setText("BUYER");
                rowcell[2].setText("ITEM");
                rowcell[3].setText("QUANTITY");
                rowcell[4].setText("RATE");
                for(int j=0;j<temp.size();j++)
                {
                    XWPFTableRow rowj=table.createRow();
                    XWPFRun rowcellj[]=new XWPFRun[5];
                    for(int k=0;k<rowcellj.length;k++)
                    {
                        rowj.getCell(k).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                        if(k==1)
                            rowj.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                        else
                            rowj.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                        rowcellj[k]=rowj.getCell(k).getParagraphs().get(0).createRun();
                        rowcellj[k].setFontFamily("Calibri");
                        rowcellj[k].setFontSize(12);
                    }
                    rowcellj[0].setText(temp.get(j).date);
                    rowcellj[1].setText(temp.get(j).buyer_name);
                    rowcellj[2].setText(temp.get(j).item);
                    rowcellj[3].setText(Integer.toString(temp.get(j).quantity));
                    rowcellj[4].setText(Integer.toString(temp.get(j).rate));
                }
                XWPFTableRow lastRow=table.createRow();
                XWPFRun lastrowcells[]=new XWPFRun[5];
                for(int k=0;k<lastrowcells.length;k++)
                {
                    lastRow.getCell(k).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    if(k==1)
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                    else
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    lastrowcells[k]=lastRow.getCell(k).getParagraphs().get(0).createRun();
                    lastrowcells[k].setFontFamily("Calibri");
                    lastrowcells[k].setFontSize(12);
                }
                lastrowcells[1].setBold(true);
                lastrowcells[1].setText(temp.get(0).seller_name+" Total");
                lastrowcells[3].setBold(true);
                lastrowcells[3].setText(getTotalQuantity(temp));
                //lastrowcells[4].setBold(true);
                //lastrowcells[4].setText(getTotalRate(temp));
                doc.write(fos);
                fos.close();
            }
        }
        catch(Exception e){
        e.printStackTrace();}
        jDialog1.setVisible(false);
        int xco=(LoginPage.hp.getWidth()-jDialog2.getWidth())/2;
        int yco=(LoginPage.hp.getHeight()-jDialog2.getHeight())/2;
        jDialog2.setBounds(xco,yco,jDialog2.getWidth(),jDialog2.getHeight());
        jDialog2.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    public String getTotalQuantity(Vector<Transaction> temp)
    {
        int total=0;
        for(int i=0;i<temp.size();i++)
            total+=temp.get(i).quantity;
        return Integer.toString(total);
    }
    public String getTotalRate(Vector<Transaction> temp)
    {
        int total=0;
        for(int i=0;i<temp.size();i++)
            total+=temp.get(i).rate;
        return Integer.toString(total);
    }
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try
        {
            Vector<Buyer> buyerlist=LoginPage.datop.getBuyerList();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd_MM_yyyy HH_mm_ss");  
            LocalDateTime now = LocalDateTime.now();
            String datetime=dtf.format(now);
            File file=new File(LoginPage.loggedInUser+" Buyerwise Brokerage Bills");
            file.mkdir();
            Bill b=LoginPage.datop.getBillFormat();
            if(b==null)
            {
                JOptionPane.showMessageDialog(null,"Bill Format not yet set","Error: invalid input",JOptionPane.ERROR_MESSAGE);
                return;
            }
            String leftlines[]=b.left.split("\n");
            String rightlines[]=b.right.split("\n");
            for(int i=0;i<buyerlist.size();i++)
            {
                Vector<Transaction> temp;
                String filename=LoginPage.loggedInUser+" Buyerwise Brokerage Bills\\"+buyerlist.get(i).name+" "+datetime+".docx";
                XWPFDocument doc=new XWPFDocument();
                FileOutputStream fos=new FileOutputStream(new File(filename));
                XWPFParagraph para1=doc.createParagraph();
                para1.setAlignment(ParagraphAlignment.CENTER);
                for(int j=0;j<leftlines.length&&j<rightlines.length;j++)
                {
                    XWPFRun left=para1.createRun();
                    left.setFontFamily("Calibri");
                    left.setFontSize(14);
                    left.setText(leftlines[j]+"\t\t\t\t\t\t\t");
                    XWPFRun right=para1.createRun();
                    right.setFontFamily("Calibri");
                    right.setFontSize(14);
                    right.setText(rightlines[j]);
                    right.addBreak();
                }
                XWPFParagraph para2=doc.createParagraph();
                para2.setAlignment(ParagraphAlignment.CENTER);
                XWPFRun name=para2.createRun();
                name.setFontFamily("Calibri");
                name.setBold(true);
                name.setFontSize(18);
                name.setText(b.broker_name);
                name.addBreak();
                XWPFRun address=para2.createRun();
                address.setFontFamily("Calibri");
                address.setFontSize(14);
                address.setText(b.broker_address);
                address.addBreak();
                XWPFParagraph para3=doc.createParagraph();
                para3.setAlignment(ParagraphAlignment.CENTER);
                XWPFRun title=para3.createRun();
                title.setFontFamily("Calibri");
                title.setFontSize(16);
                title.setBold(true);
                title.setText(b.bill_title);
                title.addBreak();
                XWPFRun period=para3.createRun();
                period.setFontFamily("Calibri");
                period.setFontSize(14);
                period.setText(b.bill_period);
                period.addBreak();
                temp=LoginPage.datop.getBuyerWiseTransactions(buyerlist.get(i).code,buyerlist.get(i).name);
                if(temp.size()==0)
                {
                    doc.write(fos);
                    fos.close();
                    File f=new File(filename);
                    f.delete();
                    continue;
                }
                XWPFParagraph buyerName=doc.createParagraph();
                buyerName.setAlignment(ParagraphAlignment.LEFT);
                XWPFRun myRun=buyerName.createRun();
                myRun.setFontFamily("Calibri");
                myRun.setFontSize(12);
                myRun.setBold(true);
                myRun.setText("BUYER:\t"+temp.get(0).buyer_name);
                myRun.addBreak();
                XWPFRun mySecondRun=buyerName.createRun();
                mySecondRun.setFontFamily("Calibri");
                mySecondRun.setFontSize(12);
                mySecondRun.setBold(true);
                mySecondRun.setText(LoginPage.datop.getBuyerPlace(temp.get(0).buyer_code,temp.get(0).buyer_name));
                XWPFTable table=doc.createTable();
                XWPFTableRow row1=table.getRow(0);
                row1.getCell(0).getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1500));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(5000));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1600));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1000));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1000));
                XWPFRun rowcell[]=new XWPFRun[5];
                for(int j=0;j<rowcell.length;j++)
                {
                    row1.getCell(j).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    row1.getCell(j).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    rowcell[j]=row1.getCell(j).getParagraphs().get(0).createRun();
                    rowcell[j].setBold(true);
                    rowcell[j].setFontFamily("Calibri");
                    rowcell[j].setFontSize(12);
                }
                rowcell[0].setText("DATE");
                rowcell[1].setText("SELLER");
                rowcell[2].setText("ITEM");
                rowcell[3].setText("QUANTITY");
                rowcell[4].setText("RATE");
                for(int j=0;j<temp.size();j++)
                {
                    XWPFTableRow rowj=table.createRow();
                    XWPFRun rowcellj[]=new XWPFRun[5];
                    for(int k=0;k<rowcellj.length;k++)
                    {
                        rowj.getCell(k).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                        if(k==1)
                            rowj.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                        else
                            rowj.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                        rowcellj[k]=rowj.getCell(k).getParagraphs().get(0).createRun();
                        rowcellj[k].setFontFamily("Calibri");
                        rowcellj[k].setFontSize(12);
                    }
                    rowcellj[0].setText(temp.get(j).date);
                    rowcellj[1].setText(temp.get(j).seller_name);
                    rowcellj[2].setText(temp.get(j).item);
                    rowcellj[3].setText(Integer.toString(temp.get(j).quantity));
                    rowcellj[4].setText(Integer.toString(temp.get(j).rate));
                }
                XWPFTableRow lastRow=table.createRow();
                XWPFRun lastrowcells[]=new XWPFRun[5];
                for(int k=0;k<lastrowcells.length;k++)
                {
                    lastRow.getCell(k).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    if(k==1)
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                    else
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    lastrowcells[k]=lastRow.getCell(k).getParagraphs().get(0).createRun();
                    lastrowcells[k].setFontFamily("Calibri");
                    lastrowcells[k].setFontSize(12);
                }
                lastrowcells[1].setBold(true);
                lastrowcells[1].setText(temp.get(0).buyer_name+" Total");
                lastrowcells[3].setBold(true);
                lastrowcells[3].setText(getTotalQuantity(temp));
                //lastrowcells[4].setBold(true);
                //lastrowcells[4].setText(getTotalRate(temp));
                doc.write(fos);
                fos.close();
            }
        }
        catch(Exception e){}
        jDialog1.setVisible(false);
        jDialog1.setVisible(false);
        int xco=(LoginPage.hp.getWidth()-jDialog2.getWidth())/2;
        int yco=(LoginPage.hp.getHeight()-jDialog2.getHeight())/2;
        jDialog2.setBounds(xco,yco,jDialog2.getWidth(),jDialog2.getHeight());
        jDialog2.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton8KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton8.doClick();
    }//GEN-LAST:event_jButton8KeyPressed

    private void jButton9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton9KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton9.doClick();
    }//GEN-LAST:event_jButton9KeyPressed

    private void jButton10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton10KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton10.doClick();
    }//GEN-LAST:event_jButton10KeyPressed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        il=new ItemsList();
        il.setExtendedState(JFrame.MAXIMIZED_BOTH);
        il.setVisible(true);
        LoginPage.hp.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        jDialog1.setVisible(false);
        jDialog2.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton11KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton11.doClick();
    }//GEN-LAST:event_jButton11KeyPressed

    private void jButton12KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton12KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton12.doClick();
    }//GEN-LAST:event_jButton12KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginPage.hp.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}

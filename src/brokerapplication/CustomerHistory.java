/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package brokerapplication;

import java.awt.Desktop;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileOutputStream;
import java.math.BigInteger;
import java.sql.DriverManager;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Collections;
import java.util.Comparator;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPageMar;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSectPr;

/**
 *
 * @author Mayank Kakad
 */
public class CustomerHistory extends javax.swing.JFrame {

    /**
     * Creates new form CustomerHistory
     */
    String myFileName;
    Vector<Transaction> transactions;
    JLabel sr_nos[],dates[],times[],customers[],items[],quantities[],rates[];
    JLabel totalQuantity;
    public CustomerHistory() {
        initComponents();
        initComps();
    }
    
    public void initComps()
    {
        totalQuantity=new JLabel();
        Vector<Seller> sellerlist=LoginPage.datop.getSellerList();
        for(int i=0;i<sellerlist.size();i++)
            jComboBox2.addItem(sellerlist.get(i).name);
        jComboBox1.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(jComboBox1.getSelectedIndex()==1)
                {
                    jLabel2.setText("Buyer:");
                    jLabel8.setText("Seller");
                    jComboBox2.removeAllItems();
                    Vector<Buyer> buyerlist;
                    if(jTextField1.getText().trim().equals(""))
                        buyerlist=LoginPage.datop.getBuyerList();
                    else
                        buyerlist=LoginPage.datop.getSpecificBuyerList(jTextField1.getText().trim().toUpperCase());
                    for(int i=0;i<buyerlist.size();i++)
                        jComboBox2.addItem(buyerlist.get(i).name);
                }
                else
                {
                    jLabel2.setText("Seller:");
                    jLabel8.setText("Buyer");
                    jComboBox2.removeAllItems();
                    Vector<Seller> sellerlist;
                    if(jTextField1.getText().trim().equals(""))
                        sellerlist=LoginPage.datop.getSellerList();
                    else
                        sellerlist=LoginPage.datop.getSpecificSellerList(jTextField1.getText().trim().toUpperCase());
                    for(int i=0;i<sellerlist.size();i++)
                        jComboBox2.addItem(sellerlist.get(i).name);
                }
            }
        });
        int num=LoginPage.datop.getTransactions("all").size();
        sr_nos=new JLabel[num];
        dates=new JLabel[num];
        times=new JLabel[num];
        customers=new JLabel[num];
        items=new JLabel[num];
        quantities=new JLabel[num];
        rates=new JLabel[num];
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jDialog1.setTitle("Print?");
        jDialog1.setSize(new java.awt.Dimension(400, 300));
        jDialog1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDialog1KeyPressed(evt);
            }
        });
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel12.setText("File Saved. Print?");
        jDialog1.getContentPane().add(jLabel12, new java.awt.GridBagConstraints());

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton6.setText("Yes");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jDialog1.getContentPane().add(jButton6, gridBagConstraints);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customerwise Transaction History");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 40)); // NOI18N
        jLabel1.setText("Customerwise History");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 100, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sellerwise", "Buyerwise" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 60, 0);
        jPanel1.add(jComboBox1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 27)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Seller:");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 40, 10);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 27)); // NOI18N
        jTextField1.setPreferredSize(new java.awt.Dimension(100, 40));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 40, 10);
        jPanel1.add(jTextField1, gridBagConstraints);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBox2.setPreferredSize(new java.awt.Dimension(300, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 40, 10);
        jPanel1.add(jComboBox2, gridBagConstraints);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 27)); // NOI18N
        jButton1.setText("Go");
        jButton1.setPreferredSize(new java.awt.Dimension(65, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 40, 10);
        jPanel1.add(jButton1, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Sr No.");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel5.setPreferredSize(new java.awt.Dimension(80, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Date");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel6.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Time");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel7.setPreferredSize(new java.awt.Dimension(100, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Buyer");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel8.setPreferredSize(new java.awt.Dimension(300, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Item");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel9.setPreferredSize(new java.awt.Dimension(200, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Quantity");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel10.setPreferredSize(new java.awt.Dimension(110, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 10);
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Rate");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jLabel11.setPreferredSize(new java.awt.Dimension(120, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 50, 0);
        jPanel1.add(jButton2, gridBagConstraints);

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 100, 10);
        jPanel1.add(jButton3, gridBagConstraints);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 0, 0);
        jPanel1.add(jButton4, gridBagConstraints);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 100, 0);
        jPanel1.add(jButton5, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        Vector<Seller> sellerlist;
        Vector<Buyer> buyerlist;
        String text=jTextField1.getText().trim().toUpperCase();
        if(text.equals(""))
        {
            if(jComboBox1.getSelectedIndex()==0)
            {
                sellerlist=LoginPage.datop.getSellerList();
                jComboBox2.removeAllItems();
                for(int i=0;i<sellerlist.size();i++)
                    jComboBox2.addItem(sellerlist.get(i).name);
            }
            else
            {
                buyerlist=LoginPage.datop.getBuyerList();
                jComboBox2.removeAllItems();
                for(int i=0;i<buyerlist.size();i++)
                    jComboBox2.addItem(buyerlist.get(i).name);
            }
        }
        else
        {
            if(jComboBox1.getSelectedIndex()==0)
            {
                sellerlist=LoginPage.datop.getSpecificSellerList(text);
                jComboBox2.removeAllItems();
                for(int i=0;i<sellerlist.size();i++)
                    jComboBox2.addItem(sellerlist.get(i).name);
            }
            else
            {
                buyerlist=LoginPage.datop.getSpecificBuyerList(text);
                jComboBox2.removeAllItems();
                for(int i=0;i<buyerlist.size();i++)
                    jComboBox2.addItem(buyerlist.get(i).name);
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox2.getItemCount()==0)
        {
            JOptionPane.showMessageDialog(null,"No customer selected","Error: invalid input",JOptionPane.ERROR_MESSAGE);
            jComboBox2.requestFocus();
            return;
        }
        deleteDisplay();
        GridBagConstraints gbc=new GridBagConstraints();
        jPanel1.remove(jButton2);
        jPanel1.remove(jButton4);
        if(jComboBox1.getSelectedIndex()==0)
        {
            transactions=LoginPage.datop.getSellerWiseTransactions(jTextField1.getText(),jComboBox2.getSelectedItem().toString());
            Collections.sort(transactions, new Comparator<Transaction>() {
                @Override
                public int compare(Transaction t1, Transaction t2) {
                    int d1 = Integer.parseInt(t1.date.substring(0, 2));
                    int d2 = Integer.parseInt(t2.date.substring(0, 2));
                    int m1 = Integer.parseInt(t1.date.substring(3, 5));
                    int m2 = Integer.parseInt(t2.date.substring(3, 5));
                    int y1 = Integer.parseInt(t1.date.substring(6, 9));
                    int y2 = Integer.parseInt(t2.date.substring(6, 9));
                    int hr1 = Integer.parseInt(t1.time.substring(0, 2));
                    int hr2 = Integer.parseInt(t2.time.substring(0, 2));
                    int min1 = Integer.parseInt(t1.time.substring(3, 5));
                    int min2 = Integer.parseInt(t2.time.substring(3, 5));
                    if(y1 == y2) {
                        if(m1 == m2) {
                            if(d1 == d2) {
                                if(hr1 == hr2) return min2 - min1;
                                else return hr2 - hr1;
                            }
                            else return d2 - d1;
                        }
                        else return m2 - m1;
                    }
                    else return y2 - y1;
                }
            });
            gbc.gridwidth=1;
            int i=0;
            for(i=0;i<transactions.size();i++)
            {
                sr_nos[i]=new JLabel();
                sr_nos[i].setFont(new java.awt.Font("Tahoma",0,20));
                sr_nos[i].setText(Integer.toString(i+1));
                sr_nos[i].setPreferredSize(new java.awt.Dimension(82,40));
                sr_nos[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                sr_nos[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=0;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(sr_nos[i],gbc);
                dates[i]=new JLabel();
                dates[i].setFont(new java.awt.Font("Tahoma",0,20));
                dates[i].setText(transactions.get(i).date);
                dates[i].setPreferredSize(new java.awt.Dimension(112,40));
                dates[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                dates[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=1;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(dates[i],gbc);
                times[i]=new JLabel();
                times[i].setFont(new java.awt.Font("Tahoma",0,20));
                times[i].setText(transactions.get(i).time);
                times[i].setPreferredSize(new java.awt.Dimension(102,40));
                times[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                times[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=2;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(times[i],gbc);
                customers[i]=new JLabel();
                customers[i].setFont(new java.awt.Font("Tahoma",0,20));
                customers[i].setText(transactions.get(i).buyer_code+"- "+transactions.get(i).buyer_name);
                customers[i].setPreferredSize(new java.awt.Dimension(302,40));
                customers[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                customers[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=3;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(customers[i],gbc);
                items[i]=new JLabel();
                items[i].setFont(new java.awt.Font("Tahoma",0,20));
                items[i].setText(transactions.get(i).item);
                items[i].setPreferredSize(new java.awt.Dimension(202,40));
                items[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                items[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=4;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(items[i],gbc);
                quantities[i]=new JLabel();
                quantities[i].setFont(new java.awt.Font("Tahoma",0,20));
                quantities[i].setText(Integer.toString(transactions.get(i).quantity));
                quantities[i].setPreferredSize(new java.awt.Dimension(112,40));
                quantities[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                quantities[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=5;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(quantities[i],gbc);
                rates[i]=new JLabel();
                rates[i].setFont(new java.awt.Font("Tahoma",0,20));
                rates[i].setText(Integer.toString(transactions.get(i).rate));
                rates[i].setPreferredSize(new java.awt.Dimension(122,40));
                rates[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                rates[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gbc.gridx=6;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,0);
                jPanel1.add(rates[i],gbc);
            }
            String totquan=Integer.toString(LoginPage.datop.getSellerQuantity(jComboBox2.getSelectedItem().toString()));
            totalQuantity.setFont(new java.awt.Font("Tahoma",1,20));
            totalQuantity.setText(totquan);
            totalQuantity.setPreferredSize(new java.awt.Dimension(112,40));
            totalQuantity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
            totalQuantity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gbc.gridx=5;
            gbc.gridy=i+5;
            gbc.insets=new Insets(0,0,15,10);
            jPanel1.add(totalQuantity,gbc);
        }
        else
        {
            transactions=LoginPage.datop.getBuyerWiseTransactions(jTextField1.getText(),jComboBox2.getSelectedItem().toString());
            gbc.gridwidth=1;
            int i=0;
            for(i=0;i<transactions.size();i++)
            {
                sr_nos[i]=new JLabel();
                sr_nos[i].setFont(new java.awt.Font("Tahoma",0,20));
                sr_nos[i].setText(Integer.toString(i+1));
                sr_nos[i].setPreferredSize(new java.awt.Dimension(82,40));
                sr_nos[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                sr_nos[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=0;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(sr_nos[i],gbc);
                dates[i]=new JLabel();
                dates[i].setFont(new java.awt.Font("Tahoma",0,20));
                dates[i].setText(transactions.get(i).date);
                dates[i].setPreferredSize(new java.awt.Dimension(112,40));
                dates[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                dates[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=1;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(dates[i],gbc);
                times[i]=new JLabel();
                times[i].setFont(new java.awt.Font("Tahoma",0,20));
                times[i].setText(transactions.get(i).time);
                times[i].setPreferredSize(new java.awt.Dimension(102,40));
                times[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                times[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=2;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(times[i],gbc);
                customers[i]=new JLabel();
                customers[i].setFont(new java.awt.Font("Tahoma",0,20));
                customers[i].setText(transactions.get(i).seller_code+"- "+transactions.get(i).seller_name);
                customers[i].setPreferredSize(new java.awt.Dimension(302,40));
                customers[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                customers[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=3;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(customers[i],gbc);
                items[i]=new JLabel();
                items[i].setFont(new java.awt.Font("Tahoma",0,20));
                items[i].setText(transactions.get(i).item);
                items[i].setPreferredSize(new java.awt.Dimension(202,40));
                items[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                items[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=4;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(items[i],gbc);
                quantities[i]=new JLabel();
                quantities[i].setFont(new java.awt.Font("Tahoma",0,20));
                quantities[i].setText(Integer.toString(transactions.get(i).quantity));
                quantities[i].setPreferredSize(new java.awt.Dimension(112,40));
                quantities[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                quantities[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=5;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,10);
                jPanel1.add(quantities[i],gbc);
                rates[i]=new JLabel();
                rates[i].setFont(new java.awt.Font("Tahoma",0,20));
                rates[i].setText(Integer.toString(transactions.get(i).rate));
                rates[i].setPreferredSize(new java.awt.Dimension(122,40));
                rates[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                rates[i].setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
                gbc.gridx=6;
                gbc.gridy=i+5;
                gbc.insets=new Insets(0,0,15,0);
                jPanel1.add(rates[i],gbc);
            }
            String totquan=Integer.toString(LoginPage.datop.getBuyerQuantity(jComboBox2.getSelectedItem().toString()));
            totalQuantity.setFont(new java.awt.Font("Tahoma",1,20));
            totalQuantity.setText(totquan);
            totalQuantity.setPreferredSize(new java.awt.Dimension(112,40));
            totalQuantity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
            totalQuantity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            gbc.gridx=5;
            gbc.gridy=i+5;
            gbc.insets=new Insets(0,0,15,10);
            jPanel1.add(totalQuantity,gbc);
        }
        gbc.gridx=0;
        gbc.gridy=transactions.size()+6;
        gbc.gridwidth=7;
        gbc.insets=new Insets(50,0,0,0);
        jPanel1.add(jButton4,gbc);
        gbc.gridy=transactions.size()+7;
        gbc.insets=new Insets(30,0,50,0);
        jPanel1.add(jButton2,gbc);
        jPanel1.revalidate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        LoginPage.hp.setVisible(true);
        HomePage.ch.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        LoginPage.hp.setVisible(true);
        HomePage.ch.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Vector<Transaction> temp;
        try
        {
            if(jComboBox2.getItemCount()==0)
            {
                JOptionPane.showMessageDialog(null,"No customer selected","Error: invalid input",JOptionPane.ERROR_MESSAGE);
                jComboBox2.requestFocus();
                return;
            }
            
            
            Bill b=LoginPage.datop.getBillFormat();
            if(b==null)
            {
                JOptionPane.showMessageDialog(null,"Bill Format not yet set","Error: invalid input",JOptionPane.ERROR_MESSAGE);
                return;
            }

            String filename;
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd_MM_yyyy HH_mm_ss");  
            LocalDateTime now = LocalDateTime.now();
            String datetime=dtf.format(now);
            File file=new File(LoginPage.loggedInUser+" Customer History");
            file.mkdir();
            filename=LoginPage.loggedInUser+" Customer History\\"+jComboBox2.getSelectedItem().toString().trim()+" "+datetime+".docx";
            String leftheader = b.left.substring(b.left.indexOf(";;@@##$$") + 8);
            String leftmain = b.left.substring(0, b.left.indexOf(";;@@##$$"));
            String rightheader = b.right.substring(b.right.indexOf(";;@@##$$") + 8);
            String rightmain = b.right.substring(0, b.right.indexOf(";;@@##$$"));
            String leftlines[]=leftmain.split("\n");
            String rightlines[]=rightmain.split("\n");
            XWPFDocument doc=new XWPFDocument();
            CTSectPr sectPr = doc.getDocument().getBody().addNewSectPr();
            CTPageMar pageMar = sectPr.addNewPgMar();
            pageMar.setLeft(BigInteger.valueOf(100));
            pageMar.setRight(BigInteger.valueOf(100));
            pageMar.setTop(BigInteger.valueOf(300));
            pageMar.setBottom(BigInteger.valueOf(100));
            XWPFTable headerTable = doc.createTable();
            headerTable.setTopBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            headerTable.setLeftBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            headerTable.setRightBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            headerTable.setBottomBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            headerTable.setInsideVBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            headerTable.setInsideHBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            XWPFTableRow headrow = headerTable.getRow(0);
            headrow.getCell(0).getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(6000));
            headrow.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(6000));
            headrow.getCell(0).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.TOP);
            headrow.getCell(0).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
            headrow.getCell(1).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.TOP);
            headrow.getCell(1).getParagraphs().get(0).setAlignment(ParagraphAlignment.RIGHT);
            XWPFRun leftheadertext = headrow.getCell(0).getParagraphs().get(0).createRun();
            XWPFRun rightheadertext = headrow.getCell(1).getParagraphs().get(0).createRun();
            leftheadertext.setFontFamily("Calibri");
            leftheadertext.setFontSize(8);
            leftheadertext.setText(leftheader);
            rightheadertext.setFontFamily("Calibri");
            rightheadertext.setFontSize(8);
            rightheadertext.setText(rightheader);
            FileOutputStream fos=new FileOutputStream(new File(filename));
            XWPFTable addresstable=doc.createTable();
            addresstable.setTopBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            addresstable.setLeftBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            addresstable.setRightBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            addresstable.setBottomBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            addresstable.setInsideVBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            addresstable.setInsideHBorder(XWPFTable.XWPFBorderType.NONE, 0, 0, "");
            XWPFTableRow addrow1=addresstable.getRow(0);
            addrow1.getCell(0).getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(6000));
            addrow1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(6000));
            XWPFRun[] leftcell = new XWPFRun[leftlines.length];
            addrow1.getCell(0).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.TOP);
            addrow1.getCell(0).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
            for(int j = 0; j < leftlines.length; j++) {
                leftcell[j]=addrow1.getCell(0).getParagraphs().get(0).createRun();
                leftcell[j].setFontFamily("Calibri");
                leftcell[j].setFontSize(12);
                leftcell[j].setText(leftlines[j]);
                if(j != leftlines.length - 1)
                    leftcell[j].addBreak();
            }
            addrow1.getCell(1).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.TOP);
            addrow1.getCell(1).getParagraphs().get(0).setAlignment(ParagraphAlignment.RIGHT);
            XWPFRun[] rightcell = new XWPFRun[rightlines.length];
            for(int j = 0; j < rightlines.length; j++) {
                rightcell[j]=addrow1.getCell(1).getParagraphs().get(0).createRun();
                rightcell[j].setFontFamily("Calibri");
                rightcell[j].setFontSize(12);
                rightcell[j].setText(rightlines[j]);
                if(j != rightlines.length - 1)
                    rightcell[j].addBreak();
            }
            int ind = b.broker_name.length();
            if(b.broker_name.contains(";;@@##$$"))
                ind = b.broker_name.indexOf(";;@@##$$");
            String bname = b.broker_name.substring(0, ind);
            if(ind == b.broker_name.length())
                ind -= 8;
            String bsubname = b.broker_name.substring(ind+8);
            XWPFParagraph para2=doc.createParagraph();
            para2.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun name=para2.createRun();
            name.setFontFamily("Calibri");
            name.setBold(true);
            name.setFontSize(16);
            name.setText(bname);
            name.addBreak();
            XWPFRun subname=para2.createRun();
            subname.setFontFamily("Calibri");
            subname.setBold(true);
            subname.setFontSize(12);
            subname.setText(bsubname);
            subname.addBreak();
            XWPFRun address=para2.createRun();
            address.setFontFamily("Calibri");
            address.setFontSize(12);
            address.setText(b.broker_address);
            XWPFParagraph para3=doc.createParagraph();
            para3.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun title=para3.createRun();
            title.setFontFamily("Calibri");
            title.setFontSize(14);
            title.setBold(true);
            title.setText(b.bill_title);
            title.addBreak();
            XWPFRun period=para3.createRun();
            period.setFontFamily("Calibri");
            period.setFontSize(12);
            period.setText(b.bill_period);
            
            if(jComboBox1.getSelectedIndex()==0)
            {
                temp=LoginPage.datop.getSellerWiseTransactions(jTextField1.getText(),jComboBox2.getSelectedItem().toString());
                XWPFParagraph sellerName=doc.createParagraph();
                sellerName.setAlignment(ParagraphAlignment.LEFT);
                XWPFRun myRun=sellerName.createRun();
                myRun.setFontFamily("Calibri");
                myRun.setFontSize(12);
                myRun.setBold(true);
                myRun.setText("SELLER:\t"+temp.get(0).seller_name);
                myRun.addBreak();
                XWPFRun mySecondRun=sellerName.createRun();
                mySecondRun.setFontFamily("Calibri");
                mySecondRun.setFontSize(12);
                mySecondRun.setBold(true);
                mySecondRun.setText(LoginPage.datop.getSellerPlace(temp.get(0).seller_code,temp.get(0).seller_name));
                XWPFTable table=doc.createTable();
                XWPFTableRow row1=table.getRow(0);
                row1.getCell(0).getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1750));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(6000));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1850));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1250));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1250));
                XWPFRun rowcell[]=new XWPFRun[5];
                for(int i=0;i<rowcell.length;i++)
                {
                    row1.getCell(i).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    row1.getCell(i).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    rowcell[i]=row1.getCell(i).getParagraphs().get(0).createRun();
                    rowcell[i].setBold(true);
                    rowcell[i].setFontFamily("Calibri");
                    rowcell[i].setFontSize(12);
                }
                rowcell[0].setText("DATE");
                rowcell[1].setText("BUYER");
                rowcell[2].setText("ITEM");
                rowcell[3].setText("QUANTITY");
                rowcell[4].setText("RATE");
                for(int i=0;i<temp.size();i++)
                {
                    XWPFTableRow rowi=table.createRow();
                    XWPFRun rowcelli[]=new XWPFRun[5];
                    for(int j=0;j<rowcelli.length;j++)
                    {
                        rowi.getCell(j).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                        if(j==1)
                            rowi.getCell(j).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                        else
                            rowi.getCell(j).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                        rowcelli[j]=rowi.getCell(j).getParagraphs().get(0).createRun();
                        rowcelli[j].setFontFamily("Calibri");
                        rowcelli[j].setFontSize(12);
                    }
                    rowcelli[0].setText(temp.get(i).date);
                    rowcelli[1].setText(temp.get(i).buyer_name);
                    rowcelli[2].setText(temp.get(i).item);
                    rowcelli[3].setText(Integer.toString(temp.get(i).quantity));
                    rowcelli[4].setText(Integer.toString(temp.get(i).rate));
                }
                XWPFTableRow lastRow=table.createRow();
                XWPFRun lastrowcells[]=new XWPFRun[5];
                for(int k=0;k<lastrowcells.length;k++)
                {
                    lastRow.getCell(k).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    if(k==1)
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                    else
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    lastrowcells[k]=lastRow.getCell(k).getParagraphs().get(0).createRun();
                    lastrowcells[k].setFontFamily("Calibri");
                    lastrowcells[k].setFontSize(12);
                }
                lastrowcells[1].setBold(true);
                lastrowcells[1].setText(temp.get(0).seller_name+" Total");
                lastrowcells[3].setBold(true);
                lastrowcells[3].setText(getTotalQuantity(temp));
                //lastrowcells[4].setBold(true);
                //lastrowcells[4].setText(getTotalRate(temp));
            }
            else
            {
                temp=LoginPage.datop.getBuyerWiseTransactions(jTextField1.getText(),jComboBox2.getSelectedItem().toString());
                XWPFParagraph buyerName=doc.createParagraph();
                buyerName.setAlignment(ParagraphAlignment.LEFT);
                XWPFRun myRun=buyerName.createRun();
                myRun.setFontFamily("Calibri");
                myRun.setFontSize(12);
                myRun.setBold(true);
                myRun.setText("BUYER:\t"+temp.get(0).buyer_name);
                myRun.addBreak();
                XWPFRun mySecondRun=buyerName.createRun();
                mySecondRun.setFontFamily("Calibri");
                mySecondRun.setFontSize(12);
                mySecondRun.setBold(true);
                mySecondRun.setText(LoginPage.datop.getBuyerPlace(temp.get(0).buyer_code,temp.get(0).buyer_name));
                XWPFTable table=doc.createTable();
                XWPFTableRow row1=table.getRow(0);
                row1.getCell(0).getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1750));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(6000));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1850));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1250));
                row1.addNewTableCell().getCTTc().addNewTcPr().addNewTcW().setW(BigInteger.valueOf(1250));
                XWPFRun rowcell[]=new XWPFRun[5];
                for(int i=0;i<rowcell.length;i++)
                {
                    row1.getCell(i).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    row1.getCell(i).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    rowcell[i]=row1.getCell(i).getParagraphs().get(0).createRun();
                    rowcell[i].setBold(true);
                    rowcell[i].setFontFamily("Calibri");
                    rowcell[i].setFontSize(12);
                }
                rowcell[0].setText("DATE");
                rowcell[1].setText("SELLER");
                rowcell[2].setText("ITEM");
                rowcell[3].setText("QUANTITY");
                rowcell[4].setText("RATE");
                for(int i=0;i<temp.size();i++)
                {
                    XWPFTableRow rowi=table.createRow();
                    XWPFRun rowcelli[]=new XWPFRun[5];
                    for(int j=0;j<rowcell.length;j++)
                    {
                        rowi.getCell(j).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                        if(j==1)
                            rowi.getCell(j).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                        else
                            rowi.getCell(j).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                        rowcelli[j]=rowi.getCell(j).getParagraphs().get(0).createRun();
                        rowcelli[j].setFontFamily("Calibri");
                        rowcelli[j].setFontSize(12);
                    }
                    rowcelli[0].setText(temp.get(i).date);
                    rowcelli[1].setText(temp.get(i).seller_name);
                    rowcelli[2].setText(temp.get(i).item);
                    rowcelli[3].setText(Integer.toString(temp.get(i).quantity));
                    rowcelli[4].setText(Integer.toString(temp.get(i).rate));
                }
                XWPFTableRow lastRow=table.createRow();
                XWPFRun lastrowcells[]=new XWPFRun[5];
                for(int k=0;k<lastrowcells.length;k++)
                {
                    lastRow.getCell(k).setVerticalAlignment(XWPFTableCell.XWPFVertAlign.CENTER);
                    if(k==1)
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.LEFT);
                    else
                        lastRow.getCell(k).getParagraphs().get(0).setAlignment(ParagraphAlignment.CENTER);
                    lastrowcells[k]=lastRow.getCell(k).getParagraphs().get(0).createRun();
                    lastrowcells[k].setFontFamily("Calibri");
                    lastrowcells[k].setFontSize(12);
                }
                lastrowcells[1].setBold(true);
                lastrowcells[1].setText(temp.get(0).buyer_name+" Total");
                lastrowcells[3].setBold(true);
                lastrowcells[3].setText(getTotalQuantity(temp));
                //lastrowcells[4].setBold(true);
                //lastrowcells[4].setText(getTotalRate(temp));
            }
            askPrint(filename);
            doc.write(fos);
            fos.close();
        }
        catch(Exception e){}
    }//GEN-LAST:event_jButton4ActionPerformed
    public String getTotalQuantity(Vector<Transaction> temp)
    {
        int total=0;
        for(int i=0;i<temp.size();i++)
            total+=temp.get(i).quantity;
        return Integer.toString(total);
    }
    public String getTotalRate(Vector<Transaction> temp)
    {
        int total=0;
        for(int i=0;i<temp.size();i++)
            total+=temp.get(i).rate;
        return Integer.toString(total);
    }
    public void askPrint(String filename)
    {
        myFileName=filename;
        int xco=(LoginPage.hp.getWidth()-jDialog1.getWidth())/2;
        int yco=(LoginPage.hp.getHeight()-jDialog1.getHeight())/2;
        jDialog1.setBounds(xco,yco,jDialog1.getWidth(),jDialog1.getHeight());
        jDialog1.setVisible(true);
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jButton4.doClick();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton3.doClick();
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton5.doClick();
    }//GEN-LAST:event_jButton5KeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton1.doClick();
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton4.doClick();
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton2.doClick();
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try
        {
            Desktop.getDesktop().print(new File(myFileName));
        }
        catch(Exception e){}
        jDialog1.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton6.doClick();
    }//GEN-LAST:event_jButton6KeyPressed

    private void jDialog1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDialog1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()=='\n')
            jButton6.doClick();
    }//GEN-LAST:event_jDialog1KeyPressed

    public void deleteDisplay()
    {
        if(transactions==null)
            return;
        for(int i=0;i<transactions.size();i++)
        {
            jPanel1.remove(sr_nos[i]);
            jPanel1.remove(dates[i]);
            jPanel1.remove(times[i]);
            jPanel1.remove(customers[i]);
            jPanel1.remove(items[i]);
            jPanel1.remove(quantities[i]);
            jPanel1.remove(rates[i]);
        }
        jPanel1.remove(totalQuantity);
        jPanel1.revalidate();
        jPanel1.repaint();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
